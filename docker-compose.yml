services:
  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:${STACK_VERSION:-8.14.3}
    mem_limit: 1073741824
    networks:
      - elk
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - type: volume
        source: elasticsearch-data
        target: /usr/share/elasticsearch/data
    environment:
      discovery.type: single-node
      xpack.security.enabled: true
      bootstrap.memory_lock: true
      ES_JAVA_OPTS: -Xms256m -Xmx256m
      ELASTIC_PASSWORD: "${ELASTIC_PASSWORD:?Error: ELASTIC_PASSWORD not set in .env file}"
    healthcheck:
      test: ["CMD-SHELL", "curl -sX GET -u 'elastic:${ELASTIC_PASSWORD}' 'http://elasticsearch:9200' | grep 'You Know, for Search' || exit 1"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  kibana:
    image: kibana:${STACK_VERSION:-8.14.3}
    container_name: kibana
    mem_limit: 1073741824
    environment:
     ELASTICSEARCH_HOSTS: http://elasticsearch:9200
     XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: a7a6311933d3503b89bc2dbc0b1234567890abcdef1234567890abcdef123456
     ELASTICSEARCH_USERNAME: kibana_system
     ELASTICSEARCH_PASSWORD: ${KIBANA_PASSWORD:-changeme}
    networks:
      - elk
    ports:
      - ${KIBANA_PORT:-5601}:5601
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - type: volume
        source: kibana-data
        target: /usr/share/kibana/data
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://kibana:5601/api/status | grep 'available' || exit 1"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  elastic-agent:
    image: docker.elastic.co/elastic-agent/elastic-agent:${STACK_VERSION:-8.14.3}
    container_name: elastic-agent
    user: root
    mem_limit: 1073741824
    volumes:
      - type: bind
        source: ./tokens
        target: /tokens
      - type: bind
        source: ./config/agent-startup.sh
        target: /agent-startup.sh
      - type: volume
        source: elastic-agent-data
        target: /usr/share/elastic-agent/state
    entrypoint: ["bash", "/agent-startup.sh"]
    networks:
      - elk
    ports:
      - "8220:8220"
    depends_on:
      kibana:
        condition: service_healthy    
    healthcheck:
      test: ["CMD-SHELL", "/usr/share/elastic-agent/elastic-agent status --output yaml | grep -q 'state: 2' || exit 1"]
      interval: 10s
      retries: 5
      start_period: 60s
      timeout: 5s

  # Setup profiles
  elasticsearch-setup:
    image: alpine:latest
    container_name: elasticsearch-setup
    profiles:
      - setup
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      ELASTIC_PASSWORD: "${ELASTIC_PASSWORD:?Error: ELASTIC_PASSWORD not set in .env file}"
      KIBANA_PASSWORD: "${KIBANA_PASSWORD:?Error: KIBANA_PASSWORD not set in .env file}"
    networks:
      - elk
    volumes:
      - type: bind
        source: ./config/es-setup.sh
        target: /es-setup.sh
    command: ["sh", "/es-setup.sh"]
    restart: "no"

  kibana-setup:
    image: alpine:latest
    container_name: kibana-setup
    profiles:
      - setup
    environment:
      ELASTIC_PASSWORD: "${ELASTIC_PASSWORD:?Error: ELASTIC_PASSWORD not set in .env file}"
      KIBANA_PASSWORD: "${KIBANA_PASSWORD:?Error: KIBANA_PASSWORD not set in .env file}"
    volumes:
      - type: bind
        source: ./config/kb-setup.sh
        target: /kb-setup.sh
      - type: bind
        source: ./tokens
        target: /tokens     
    command: ["sh", "/kb-setup.sh"]
    networks:
      - elk
    depends_on:
      elasticsearch-setup:
        condition: service_completed_successfully
      kibana:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "test", "-f", "/tokens/enrollment_tokens.txt"]
      interval: 10s
      retries: 5
      start_period: 60s
      timeout: 5s

volumes:
  elasticsearch-data:
    name: elasticsearch-data
  kibana-data:
    name: kibana-data
  elastic-agent-data:
    name: elastic-agent-data


networks:
  elk:
    external: true