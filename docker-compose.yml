
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: elasticsearch
    mem_limit: ${MEM_LIMIT}
    environment:
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ports:
      - 9200:9200
      - 9300:9300
    healthcheck:
      test: ["CMD-SHELL", "curl -sX GET -u elastic:${ELASTIC_PASSWORD} 'http://localhost:9200' | grep 'You Know, for Search' || exit 1"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    container_name: kibana
    mem_limit: ${MEM_LIMIT}
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - ELASTICSEARCH_SSL_VERIFICATIONMODE=none
    ports:
      - ${KIBANA_PORT}:5601
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./config/kibana.yml:/usr/share/kibana/config/kibana.yml
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:5601/api/status | grep 'available' || exit 1"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  setup:
    image: alpine:latest
    container_name: setup
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - KIBANA_PASSWORD=${KIBANA_PASSWORD}
    volumes:
      - ./scripts/init-setup.sh:/init-setup.sh
      - ./tokens:/tokens
    entrypoint: ["/bin/sh", "-c", "/init-setup.sh"]
    depends_on:
      kibana:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "test", "-f", "/tokens/enrollment_tokens.txt"]
      interval: 10s
      retries: 5
      start_period: 60s
      timeout: 5s

  elastic-agent:
    image: docker.elastic.co/beats/elastic-agent:${STACK_VERSION}
    container_name: fleet
    restart: always
    user: root
    mem_limit: ${MEM_LIMIT}
    environment:
      - FLEET_SERVER_ENABLE=true
      - FLEET_SERVER_ELASTICSEARCH_HOST=http://elasticsearch:9200
      - FLEET_SERVER_SERVICE_TOKEN=<token>
      - FLEET_SERVER_PORT=8220
    ports:
      - "8220:8220"
    depends_on:
      kibana:
        condition: service_healthy