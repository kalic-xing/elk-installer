
services:
  elasticsearch:
    image: elasticsearch:${STACK_VERSION}
    container_name: elasticsearch
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ports:
      - 9200:9200
      - 9300:9300

  elasticsearch-init:
    image: alpine:latest
    container_name: elasticsearch-init
    environment:
       - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
       - KIBANA_PASSWORD=${KIBANA_PASSWORD}
    volumes:
      - ./scripts/init-elasticsearch.sh:/init-elasticsearch.sh
    entrypoint: ["/bin/sh", "/init-elasticsearch.sh"]
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:${STACK_VERSION}
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - ELASTICSEARCH_SSL_VERIFICATIONMODE=none
    ports:
      - ${KIBANA_PORT}:5601
    depends_on:
      - elasticsearch
      - elasticsearch-init
    volumes:
      - ./config/kibana.yml:/usr/share/kibana/config/kibana.yml

  token-init:
    image: alpine:latest
    container_name: token-init
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - ./scripts/init-token.sh:/init-token.sh
      - ./tokens:/tokens
    entrypoint: ["/bin/sh", "/init-token.sh"]
    depends_on:
      - kibana

  elastic-agent:
    image: docker.elastic.co/beats/elastic-agent:${STACK_VERSION}
    container_name: fleet
    restart: always
    user: root
    environment:
      - FLEET_SERVER_ENABLE=true
      - FLEET_SERVER_ELASTICSEARCH_HOST=http://elasticsearch:9200
      - FLEET_SERVER_SERVICE_TOKEN=<token>
      - FLEET_SERVER_PORT=8220
    ports:
      - "8220:8220"
    depends_on:
      - elasticsearch
      - kibana

volumes:
  tokens:
    driver: local